name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest  

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x     
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Install SonarCloud scanner
      run: dotnet tool install --global dotnet-sonarscanner     
    - name: Sonarscanner Begin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet sonarscanner begin /k:"rcamison_MDAS_MDS_HelloWorld" /o:"damianraul" /d:sonar.cs.opencover.reportsPaths="opencover.xml" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --filter Type!=Acceptance /p:CollectCoverage=true /p:CoverletOutputFormat=OpenCover /p:CoverletOutput=TestReport/
    - name: Prepare coverage report
      run: mv tests/HelloWorldTests/TestReport/coverage.opencover.xml opencover.xml      
    - name: Sonarscanner End
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"   
    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
    - name: Build the Docker image
      run: docker compose build
    - name: Docker push
      run: docker push damianraul.helloworld:$(date +%s)
